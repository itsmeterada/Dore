XCOMM From: XConsortium: Library.tmpl,v 1.32 94/05/14 15:10:41 rws Exp
/*
 * Library imakefile info  - this contains any special redefinitions, etc.
 * that Imakefiles in the various library subtrees will need.
 *
 * Before including this, you must set the following boolean variables:
 * DoNormalLib, DoSharedLib, DoDebugLib, DoProfileLib
 *
 * To get automatic generation of standard rules, also set the variables:
 * LibName, SoRev, HasSharedData, and optionally HugeLibrary and IncSubdir
 */

/* Redefines */
/* FIXME: These may need WindowsNT-specific versions */

#undef LibObjCompile
#define LibObjCompile(dir,options) RemoveFiles($@ $(BUILDLIBDIR)/dir/$@) @@\
	$(CC) -c $(CCOPTIONS) $(ALLDEFINES) options $*.c		@@\
	$(CP) $@ $(BUILDLIBDIR)/dir/$@

#undef LibMkdir
#define LibMkdir(dir) MakeDir($(BUILDLIBDIR)/dir)

/* We don't have to redefine LibCleanDir(), as the library object directories
 * will be cleaned in lib's Makefile. */

#if DoDebugLib
#define _DebuggedLibMkdir() LibMkdir(debugger)
#define _DebuggedObjCompile(options) DebuggedLibObjCompile(options)
#define _DebuggedCleanDir() LibCleanDir(debugger)
#else
#define _DebuggedLibMkdir() $(_NULLCMD_)
#define _DebuggedObjCompile(options) $(_NULLCMD_)
#define _DebuggedCleanDir() $(_NULLCMD_)
#endif

#if DoProfileLib
#define _ProfiledLibMkdir() LibMkdir(profiled)
#define _ProfiledObjCompile(options) ProfiledLibObjCompile(options)
#define _ProfiledCleanDir() LibCleanDir(profiled)
#else
#define _ProfiledLibMkdir() $(_NULLCMD_)
#define _ProfiledObjCompile(options) $(_NULLCMD_)
#define _ProfiledCleanDir() $(_NULLCMD_)
#endif

#if !DoNormalLib
#define _NormalLibMkdir() $(_NULLCMD_)
#define _NormalObjCompile(options) $(_NULLCMD_)
#define _NormalCleanDir() $(_NULLCMD_)
#else
#define _NormalLibMkdir() LibMkdir(unshared)
#define _NormalObjCompile(options) UnsharedLibObjCompile(options)
#define _NormalCleanDir() LibCleanDir(unshared)
#endif

#if !DoSharedLib
#define _SharedLibMkdir() $(_NULLCMD_)
#define _SharedObjCompile(options) $(_NULLCMD_)
#define _SharedCleanDir() $(_NULLCMD_)
#else
#define _SharedLibMkdir() LibMkdir(shared)
#define _SharedObjCompile(options) SharedLibObjCompile(options)
#define _SharedCleanDir() LibCleanDir(shared)
#endif

#define SRCsuf c

#ifndef LibraryObjectRule
#define LibraryObjectRule()						@@\
all::									@@\
	_DebuggedLibMkdir()						@@\
	_ProfiledLibMkdir()						@@\
	_NormalLibMkdir()						@@\
	_SharedLibMkdir()						@@\
									@@\
includes::								@@\
	_DebuggedLibMkdir()						@@\
	_ProfiledLibMkdir()						@@\
	_NormalLibMkdir()						@@\
	_SharedLibMkdir()						@@\
									@@\
.SRCsuf.Osuf:								@@\
	_DebuggedObjCompile($(_NOOP_))					@@\
	_ProfiledObjCompile($(_NOOP_))					@@\
	_NormalObjCompile($(_NOOP_))					@@\
	_SharedObjCompile($(_NOOP_))					@@\
									@@\
clean::									@@\
	_DebuggedCleanDir()						@@\
	_ProfiledCleanDir()						@@\
	_NormalCleanDir()						@@\
	_SharedCleanDir()						@@\

#endif /* LibraryObjectRule */

#ifndef SpecialLibObjectRule
#define SpecialLibObjectRule(objs,depends,options)			@@\
objs: depends								@@\
	_DebuggedObjCompile(options)					@@\
	_ProfiledObjCompile(options)					@@\
	_NormalObjCompile(options)					@@\
	_SharedObjCompile(options)					@@\

#endif /* SpecialLibObjectRule */

#ifdef LibName

LIBNAME = LibName

LibraryObjectRule()

#undef _LinkBuildLibrary
#define _LinkBuildLibrary(lib) LinkBuildLibrary(lib)

#if DoSharedLib
SharedLibraryTarget($(LIBNAME),$(SoRev),$(OBJS),shared,..)
InstallSharedLibrary($(LIBNAME),$(SoRev),$(SHLIBDIR))
#if HasSharedData
SharedLibraryDataTarget($(LIBNAME),$(SoRev),$(UNSHAREDOBJS))
InstallSharedLibraryData($(LIBNAME),$(SoRev),$(SHLIBDIR))
#endif
#endif
#if DoNormalLib
#if HugeLibrary
#if DoSharedLib && SeparateSharedCompile
UnsharedLibraryTarget3($(LIBNAME),$(OBJS1),$(OBJS2),$(OBJS3),unshared,..)
#else
NormalLibraryTarget3($(LIBNAME),$(OBJS1),$(OBJS2),$(OBJS3))
#endif
#else
#if DoSharedLib && SeparateSharedCompile
UnsharedLibraryTarget($(LIBNAME),$(OBJS),unshared,..)
#else
NormalLibraryTarget($(LIBNAME),$(OBJS))
#endif
#endif
InstallLibrary($(LIBNAME),$(USRLIBDIR))
#endif
#if DoProfileLib
ProfiledLibraryTarget($(LIBNAME),$(OBJS))
InstallLibrary($(LIBNAME)_p,$(USRLIBDIR))
#endif
#if DoDebugLib
DebuggedLibraryTarget($(LIBNAME),$(OBJS))
InstallLibrary($(LIBNAME)_d,$(USRLIBDIR))
#endif

/* LintLibraryTarget($(LIBNAME),$(SRCS)) */
/* InstallLintLibrary($(LIBNAME),$(LINTLIBDIR)) */
#ifdef IncSubdir
BuildIncludes($(HEADERS),IncSubdir,..)
InstallMultipleFlags($(HEADERS),$(INCDIR)/IncSubdir,$(INSTINCFLAGS))
#else
#if !defined(LibHeaders) || LibHeaders
BuildIncludesTop($(HEADERS))
InstallMultipleFlags($(HEADERS),$(INCDIR),$(INSTINCFLAGS))
#endif
#endif

NormalLintTarget($(SRCS))
#endif
