.\"#ident "%W% %G%"
.\"
.\" # Copyright (C) 1994 Kubota Graphics Corp.
.\" # 
.\" # Permission to use, copy, modify, and distribute this material for
.\" # any purpose and without fee is hereby granted, provided that the
.\" # above copyright notice and this permission notice appear in all
.\" # copies, and that the name of Kubota Graphics not be used in
.\" # advertising or publicity pertaining to this material.  Kubota
.\" # Graphics Corporation MAKES NO REPRESENTATIONS ABOUT THE ACCURACY
.\" # OR SUITABILITY OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED
.\" # "AS IS", WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING THE
.\" # IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" # PURPOSE AND KUBOTA GRAPHICS CORPORATION DISCLAIMS ALL WARRANTIES,
.\" # EXPRESS OR IMPLIED.
.\"
.TH DoTriangleMesh 3D  "Dore"
.SH NAME
DoTriangleMesh \- Create a triangle mesh primitive object
.SH SYNOPSIS
.nf
.ft 3
C:
.in  +.5i
DtObject DoTriangleMesh(colormodel, vertextype, 
	vertexcount, vertices, trianglecount,
	triangles, smoothflag)
DtColorModel colormodel;
DtVertexType vertextype;
DtInt vertexcount;
DtReal vertices[\|];
DtInt trianglecount;
DtInt triangles[\|];
DtFlag smoothflag;
.sp
.in -.5i
FORTRAN:
.in +.5i
INTEGER*4 DOTRIM(COLMOD, VTXTYP, VTXCNT, 
		VTXS, TRICNT, TRIS, 
			SMOOFL)
INTEGER*4 COLMOD
INTEGER*4 VTXTYP
INTEGER*4 VTXCNT
REAL*8 VTXS(*)
INTEGER*4 TRICNT
INTEGER*4 TRIS(*)
INTEGER*4 SMOOFL
.in -.5i
.fi
.SH DESCRIPTION
.IX DOTRIM
.IX DoTriangleMesh
.I DoTriangleMesh
creates a triangle mesh primitive object that defines a collection of
triangles, normally interconnected.
.PP
With a triangle mesh, you specify a collection of vertices
in space and connect the vertices into a collection of 
triangles, usually forming a connected surface.
.PP
The parameter \f2colormodel\fP specifies the color model used if the vertices
contain color information for shading purposes.
The parameter \f2vertextype\fP specifies the exact nature of the vertices.
for more information, refer to Chapter 6, \f2Dore Vertex Types\fP,
in the \f2Dore Reference Manual\fP or 
to the \f2VertexTypes\fP on-line manual page.)
The parameter \f2vertexcount\fP specifies the total number of vertices in
the mesh.
The parameter \f2vertices\fP is an array of vertex data.
The parameter \f2trianglecount\fP specifies the total number of triangles
in the mesh.  The parameter \f2triangles\fP is a one-dimensional
array containing \f2trianglecount\fP triplets of integers.
Each triplet is an ordered
list of mesh vertex numbers for the three coordinates of the triangle.
.PP
If vertex normals are not provided,
the parameter \f2smoothflag\fP specifies that the vertex normal for shading
purposes will be the average of the geometric normals from a vertex's
adjacent surfaces.  This assumes that the triangle mesh defines a 
smooth surface.
.PP
The geometric normal to each triangle is calculated using the right-hand rule
(when the fingers of the right hand point in the order of the vertices,
the thumb points in the direction of the normal).  
These normals are sometimes used for backface culling and
facet shading.
.SH ERRORS
\f2DoTriangleMesh\fP must be called with at least three vertices.
.PP 15
[WARNING - invalid parameter]
.PP
.I DoTriangleMesh
will issue an warning if a zero vertex normal is calculated by Dore.
.PP 15
[WARNING - triangle normals sum to 0 at vertex, check for back to back triangles]
.PP
.I DoTriangleMesh
will fail if an invalid vertex list pointer is specified.
.PP 15
[WARNING - value out of range]
.SH "SEE ALSO"
.na
.nh
DoPolygon(3D), DoPolygonMesh(3D),
DoSimplePolygon(3D), DoSimplePolygonMesh(3D),
DoTriangleList(3D), DoTriangleStrip(3D), VertexTypes(3D)
.hy
.ad
