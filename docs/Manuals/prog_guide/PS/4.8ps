%!PS-Adobe-3.0
%%Title: chapter04/4-8.ps
%%Creator: ImageMagick
%%CreationDate: Tue Jan 10 16:11:37 1995
%%BoundingBox: 210 316 402 476
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments
%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters: 
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters: 
  %   colors: number of colors in the colormap.
  %   colormap: red, green, blue color packets.
  %
  currentfile buffer readline pop
  token pop /colors exch def pop
  /colors colors 3 mul def
  /colormap colors string def
  currentfile colormap readhexstring pop pop
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { PseudoClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayPseudoClassPacket } image
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters: 
  %   x & y translation.
  %   x & y scale.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  /NewCenturySchlbk-Roman findfont 24 scalefont setfont
  currentfile buffer readline pop
  0 y 12 add moveto buffer show pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%BeginData:
DisplayImage
210 316
192 160
            
192 160
1
0
2
ffffff
000000
00dd01020072010100460100000201000070010000010100004a0100006e010000030100
00480100006f01000003010000460101007401000049010000720100004b010000700100
004c0100006f01000048010000020100006f0100004a01020070010500ff0014015a0063
010000000100005601000000010000620100000001000056010000000100006201000000
010000560100000001000061010000020100005401000002010000600100000201000054
01000002010000600100000201000054010000020100005f010000040100005201000004
0100005e0100000401000052010000040100005d0100000501000052010000050100005c
0100000601000050010000060100005c0100000601000050010000060100005b01000007
01000050010000070100005a010000080100004e010000080100005a010000080100004e
01000008010000590100000a0100004c0100000a010000580100000a0100004c0100000a
010000570100000b0100004c0100000b010000560100000c0100004a0100000c01000056
0100000c0100004a0100000c010000550100000d0100004a0100000d010000540100000e
010000480100000e010000540100000e010000480100000e010000530100000f01000048
0100000f0100005201000010010000460100001001000051010000110100004601000011
01000050010000110100004601000011010000500100001201000044010000120100004f
0100001301000044010000130100004e0100001401000042010000140100004e01000014
01000042010000140100004d0100001501000042010000150100004c0100001601000040
010000160100004b0100001701000040010000170100004a010000170100004001000017
0100004a010000180100003e0100001801000049010000190100003e0100001901000048
010000190100003e01000019010000480100001a0100003c0100001a010000470100001b
0100003c0100001b010000460100001b0100003c0100001b010000450100001d0100003a
0100001d010000440100001d0100003a0100001d010000440100001e010000380100001e
010000430100001f010000380100001f010000420100001f010000380100001f01000042
010000200100003601000020010000410100002101000036010000210100004001000021
01000036010000210100003f0100002301000034010000230100003e0100002301000034
010000230100003e0100002301000034010000230100003d010000250100003201000025
0100003c0100002501000032010000250100003c0100002501000032010000250100003b
0100002701000030010000270100003a0100002701000030010000270100003901000029
0100002e0100002901000038010000290100002e0100002901000038010000290100002e
01000029010000370100002b0100002c0100002b010000360100002b0100002c0100002b
010000360100002b0100002c0100002b010000350100002d0100002a0100002d01000034
0100002d0100002a0100002d010000330100002e0100002a0100002e010000320100002f
010000280100002f010000320100002f010000280100002f010000310100003001000028
0100003001000030010000310100002601000031010000230100000b0100003101000026
010000310100000c010000140101000a0100003301000024010000330100000a01010013
010000000100000a01000033010000240100003301000009010000000100001201000001
0100000b0100003201000024010000320100000c01000011010000020100000c01000032
01000022010000320100000d01000010010000030100000d010100300100002201000030
0101000e010000100106000e0100002f010000220100002f010000100100001501000010
0100002f010000200100002f0100001101000015010000110101002d010000200100002d
0101001201000015010000130100002c010000200100002c010000140100002b0100002c
0100001e0100002c010000430101002a0100001e0100002a01010046010000290100001e
0100002901000049010000290100001c010000290100004b010100270100001c01000027
0101004e010000270100001a0100002701000051010000260100001a0100002601000053
010100240100001a01000024010100560100002401000018010000240100005901000023
01000018010000230100005b0101002101000018010000210101005e0100002101000016
0100002101000061010000200100001601000020010000630101001e010000160100001e
010100660100001e010000140100001e010000690100001d010000140100001d0100006b
0101001b010000140100001b0101006e0100001b010000120100001b010000710100001a
010000120100001a01000073010100190100001001000019010100760100001801000010
01000018010000790100001701000010010000170100007b010100160100000e01000016
0101007e010000150100000e0100001501000081010000140100000e0100001401000083
010100130100000c0100001301010086010000120100000c010000120100008901000011
0100000c010000110100008b010100100100000a010000100101008e0100000f0100000a
0100000f010000910100000e0100000a0100000e010000930101000d010000080100000d
010100960100000c010000080100000c010000990100000c010000060100000c0100009b
0101000a010000060100000a0101009e010000090100000601000009010000a101000009
0100000401000009010000a3010100070100000401000007010100a60100000601000004
01000006010000a9010000060100000201000006010000ab010100040100000201000004
010100ae010000030100000201000003010000b1010000030100000001000003010000b3
010100010100000001000001010100b6010000000100000001000000010000b901000000
01000000010000bb010200ff00ff00ff00ff00ff003c010200bb01000002010000ba0100
0002010000ba01000002010000ba01000002010000ba01000002010000ba010000020100
00ba01000002010000ba01000002010000bb010200ff00ff00ff00ff0023
%%EndData
%%PageTrailer
%%Trailer
%%EOF
