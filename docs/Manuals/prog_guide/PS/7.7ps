%!PS-Adobe-3.0
%%Title: chapter07/7-7.ps
%%Creator: ImageMagick
%%CreationDate: Tue Jan 10 16:11:56 1995
%%BoundingBox: 242 335 370 457
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments
%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters: 
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters: 
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters: 
  %   colors: number of colors in the colormap.
  %   colormap: red, green, blue color packets.
  %
  currentfile buffer readline pop
  token pop /colors exch def pop
  /colors colors 3 mul def
  /colormap colors string def
  currentfile colormap readhexstring pop pop
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { PseudoClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayPseudoClassPacket } image
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters: 
  %   x & y translation.
  %   x & y scale.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  /NewCenturySchlbk-Roman findfont 24 scalefont setfont
  currentfile buffer readline pop
  0 y 12 add moveto buffer show pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%BeginData:
DisplayImage
242 335
128 122
            
128 122
1
0
2
ffffff
000000
00ff0032010100000100007a01000000010000000100007a01000000010000000100007b
010200ff007c010100000100007a01000000010000000100007a01000000010000000100
007a0103007c0100007d010400fb0103007a0100007e0100007c010600f80100007e0100
007e01060020010300530100002a010000330100001d0100002401000000010100010100
003301000044010000010101003001000000010100010100004001000000010000360100
00000103003a0100000101000000010200380100003d0100000201000002010000360100
00020100001c01050015010200030102003a010000010101001901000002010000000100
001401000000010000400100000101000001010000180100000201000000010000170100
00410100000201000019010200000100001901000040010000010100003a010000400101
001b0103007a010000170100004b0100000301000014010000150103004a010300140104
001601000046010000020100002e0100000201000047010300040102000c010000000104
000f010000000100000001000000010200470100000501000000010000000100000e0100
0014010000040100004e01000000010000000100000d0104000b01000001010100010101
00000101004d0101000101000021010000010100005501000001010000010100000c0100
00020100000d01000001010000550104000c0104000c0101000001000001010000560100
0003010000180100000001000000010000010100005c0100000a01000001010100060100
000001000000010100010101005901000000010100000101000701000001010000010100
0005010000030100005f0100000101000000010000060100000101000001010000040100
00050101005e010200000100000601000001010000010100000401000001010000000101
006201010001010000050101000101000006010100630100000101000002010000150101
0063010400000100001001010066010000000100000101000016010200060100000f0101
004401000005010000140100000201000000010000130100000101000044010000000101
000101000014010000040102000001010000010000000100000201020003010000030100
000001000000010000020101003e01000017010200010100000001010000010000000101
000001000000010000010100000301000003010000000101000001000000010000010100
0039010100010100001a0100000001000000010000010100000001000001010000000100
000101000003010000030100000001000001010000000103003b01010017010000020100
000001000000010000010100000001000001010000000100000101000004010000010100
000101000001010000000100002c0101002a010200020101000101000000010000010100
00010102000501010002010000010100000101020028010000010100003a010000010100
002801020002010000010100000401000003010200010100000101000000010000000100
0000010000020102002a0101002c01000001010000010100000401000003010000010100
000001000001010000000100000001000001010000000100000201000055010300000100
000001000000010000040100000301000001010000000100000101000000010000000100
0001010000000100001a010000000101003a010000010100000001000000010000000100
000101030003010000010100000001000000010100000102000101000001010200170100
00010100003b010100000100000201010004010000030102000201000000010000000100
000001000000010100040100001601000002010000480100001201000000010000020100
00140100000101010044010000010103000d010000060102001c010000650101000f0101
000101000000010100640100000901000001010100040101000001000002010000010100
006201000000010100020100000101000001010000060100000101000001010000600103
0005010000010100000101000006010000010102005e0100000001000005010000020100
0001010000010100000801000000010000010100005e0100000201020004010100010100
000b01000000010100000100005901000002010100180100000001000002010000580100
00000100000101000000010000070104000c010000010100000101010055010000010100
000a0100000201000010010000000100000101010051010000010103001e010000000100
000201000053010100010100000a01040012010000000100000501010049010000030100
00010100000c010000110100000001000000010000040100000001000046010100010100
00010101000c010400000100000e01000001010000040100000201010043010000020104
002401000005010000000101000301000041010000000100000101000010010400180100
000101000047010000020100001301000018010100020100000001000045010100000100
001401000019010100020100004601000000010000100103001b01000001010000000100
0000010100430100003301000001010000010100000101000052010000000102001f0100
0002010000000100003a010000000100001401000000010000020100001d010100010100
00000100000001010037010000030100001201000000010000020100001f010100010100
00040100003701000001010000120105001d010200010100000201000000010000330100
000001020042010000000100000001000033010000040101003d01000001010000330100
000001010001010100410100003401000002010000440100003901000018010000010101
005801010000010100000100001901000001010000010100005a0100001c010000010100
00010100007801000001010000010100005a0100001d01010001010000fa0102007b0100
0000010000000100007a01000000010000000100007a01000000010100ff0100007c0101
007b0101007f0101007f0100007b0102007b01000000010000000100007a010000000100
00000100007a01000000010100fb0104007d0100007f0100007a010300ff0042
%%EndData
%%PageTrailer
%%Trailer
%%EOF
